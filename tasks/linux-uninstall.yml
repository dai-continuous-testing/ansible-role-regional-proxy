
- name: assert all vars are set
  assert: 
    that: "{{ item }} != '' " 
    quiet: true
  with_items:
  - app_name
  - service_name
  - installation_root_folder
  - service_file_path

- name: gather installed services
  service_facts:

- name: stop the service
  service:
    name: "{{ service_name }}"
    state: stopped
    enabled: no
  when: "service_name in services"
  become: yes

- name: stop nginx service
  service:
    name: nginx
    state: stopped
    enabled: no
  when: "'nginx.service' in services"
  become: yes

- name: kill nginx processes
  shell: |
    killall nginx
  register: killnginxresult
  changed_when: killnginxresult.rc == 0
  failed_when: killnginxresult.rc != 0 and killnginxresult.rc != 1
  ignore_errors: yes
  become: yes

- name: remove the service
  file:
    path: "{{ service_file_path }}"
    state: absent
  become: yes

- name: remove tracking files
  file: 
    path: "{{ installation_root_folder }}/{{ item }}"
    state: absent
  with_items:
    - "{{ app_name }}-previous"
    - "{{ app_name }}-current"
  become: yes

- name: find app versions
  find:
    path: "{{ installation_root_folder }}"
    pattern: "{{ app_name }}-*"
    file_type: directory
  register: application_versions

- name: remove application versions
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ application_versions.files }}"
  become: yes

# remove nginx

- name: remove nginx package
  package:
    name: nginx
    state: absent
  become: yes

- name: remove nginx user
  user:
    name: "{{ nginx_user }}"
    state: absent
  become: yes

- name: remove nginx group
  group:
    name: "{{ nginx_user }}"
    state: absent
  become: yes

- name: remove nginx conf folder
  file:
    path: "{{ nginx_conf }}"
    state: absent
  become: yes

- name: remove nginx logs folder
  file:
    path: "{{ nginx_logs }}"
    state: absent
  become: yes
